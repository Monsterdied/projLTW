DROP TABLE IF EXISTS USERS;

CREATE TABLE USERS(
    IDUSER INTEGER PRIMARY KEY AUTOINCREMENT,
    NAME TEXT NOT NULL,
    EMAIL TEXT NOT NULL,
    USERNAME TEXT NOT NULL,
    PASSWORD TEXT NOT NULL,
    TYPE TEXT NOT NULL,
    BIO TEXT,
    PROFILE_PICK TEXT
);

DROP TABLE IF EXISTS TAGS;
CREATE TABLE TAGS(
    IDTAG INTEGER PRIMARY KEY AUTOINCREMENT,
    HASTAG_NAME TEXT NOT NULL
);

DROP TABLE IF EXISTS STATUS;
CREATE TABLE STATUS(
    IDSTATUS INTEGER PRIMARY KEY AUTOINCREMENT,
    STATUS TEXT NOT NULL
);

DROP TABLE IF EXISTS DEPARTMENTS;
CREATE TABLE DEPARTMENTS(
    IDDEPARTMENT INTEGER PRIMARY KEY AUTOINCREMENT,
    DEPARTMENT_NAME TEXT NOT NULL,
    SINOPSE TEXT
);

DROP TABLE IF EXISTS TICKETS;
CREATE TABLE TICKETS(
    IDTICKET INTEGER PRIMARY KEY AUTOINCREMENT,
    PUBLISHED_TIME INT NOT NULL,
    CONTENT TEXT NOT NULL,

    IDSTATUS INT NOT NULL,
    IDCLIENT INT NOT NULL,
    IDAGENT INT NOT NULL,
    IDDEPARTMENT INT NOT NULL,
    CONSTRAINT TICKET_STATUS_FK1 FOREIGN KEY(IDSTATUS) REFERENCES STATUS(IDSTATUS) ON UPDATE CASCADE ON DELETE CASCADE ,
    CONSTRAINT TICKET_CLIENT_FK2 FOREIGN KEY(IDCLIENT) REFERENCES USERS(IDUSER) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT TICKET_AGENT_FK3 FOREIGN KEY(IDAGENT) REFERENCES USERS(IDUSER) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT TICKET_DEPARTMENT_FK4 FOREIGN KEY(IDDEPARTMENT) REFERENCES DEPARTMENTS(IDDEPARTMENT) ON UPDATE CASCADE ON DELETE CASCADE
);

DROP TABLE IF EXISTS LOGS;
CREATE TABLE LOGS(
    IDLOG INTEGER PRIMARY KEY AUTOINCREMENT,
    LOG_ACTION TEXT NOT NULL,
    DATE INT NOT NULL,
    IDTICKET INT NOT NULL ,
    CONSTRAINT LOG_TICKET_FK1 FOREIGN KEY(IDTICKET) REFERENCES TICKETS(IDTICKET) ON UPDATE CASCADE ON DELETE CASCADE
);

DROP TABLE IF EXISTS MESSAGES;
CREATE TABLE MESSAGES(
    IDMESSAGE INTEGER PRIMARY KEY AUTOINCREMENT,

    PUBLISHED_TIME INT NOT NULL,
    CONTENT TEXT NOT NULL,

    IDUSER INT NOT NULL ,
    IDTICKET INT NOT NULL ,
    CONSTRAINT MESSAGE_USER_FK1 FOREIGN KEY(IDUSER) REFERENCES USERS(IDUSER) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT MESSAGE_TICKET_FK2 FOREIGN KEY(IDTICKET) REFERENCES TICKETS(IDTICKET) ON UPDATE CASCADE ON DELETE CASCADE
);

DROP TABLE IF EXISTS FAQS;
CREATE TABLE FAQS(
    IDFAQ INTEGER PRIMARY KEY AUTOINCREMENT,

    QUESTION TEXT NOT NULL,
    ANSWER TEXT NOT NULL
);

DROP TABLE IF EXISTS TAG_TICKET;
CREATE TABLE TAG_TICKET(
    IDTAG INT NOT NULL,
    IDTICKET INT NOT NULL,
    CONSTRAINT TAG_TICKET_PK PRIMARY KEY (IDTICKET,IDTAG),
    CONSTRAINT TAG_TICKET_TICKET_FK1 FOREIGN KEY(IDTICKET) REFERENCES TICKETS(IDTICKET) ON UPDATE CASCADE ON DELETE CASCADE ,
    CONSTRAINT TAG_TICKET_TAG_FK1 FOREIGN KEY(IDTAG) REFERENCES TAGS(IDETAG) ON UPDATE CASCADE ON DELETE CASCADE 
);

DROP TABLE IF EXISTS DEPARTMENT_AGENT;
CREATE TABLE DEPARTMENT_AGENT(
    IDAGENT INT NOT NULL,
    IDDEPARTMENT INT NOT NULL,
    CONSTRAINT DEPARTMENT_AGENT_PK PRIMARY KEY (IDAGENT,IDDEPARTMENT),
    CONSTRAINT DEPARTMENT_AGENT_FK1 FOREIGN KEY(IDAGENT) REFERENCES USERS(IDUSER) ON UPDATE CASCADE ON DELETE CASCADE ,
    CONSTRAINT DEPARTMENT_AGENT_FK1 FOREIGN KEY(IDDEPARTMENT) REFERENCES DEPARTMENTS(IDDEPARTMENT) ON UPDATE CASCADE ON DELETE CASCADE 
);